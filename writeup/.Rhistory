filter(rowSums(is.na(data) >= 7))
# Data exclusion / filtering
# Filter out people who did not answer 7 or more questions (half or more)
rowSums(is.na(data))
# Data exclusion / filtering
# Filter out people who did not answer 7 or more questions (half or more)
total_na <- rowSums(is.na(data))
if (total_na >= 7) {
return (TRUE)
if (total_na >= 7) {
return (TRUE)
realistic_threat_long_d %>%
group_by(Condition) %>%
summarize(AvgThreat = mean(realisticThreatQ_1, na.rm=T))
realistic_threat_long_d %>%
group_by(Condition) %>%
summarize(AvgThreat = mean(realisticThreatQ_1, na.rm=T))
realistic_threat_long_d %>%
group_by(Condition) %>%
realistic_threat_long_d %>%
group_by(Condition)
realistic_threat_long_d = realistic_threat_long_d %>%
group_by(Condition) %>%
summarize(AvgThreat = mean(realisticThreatQ_1, na.rm=T))
realistic_threat_long_d = data_long %>%
group_by(Condition) %>%
summarize(AvgThreat = mean(realisticThreatQ_1, na.rm=T))
# Rename 1 and 2 in condition to no threat and threat
data$[data$Condition == "1"] <- "No Threat"
# Rename 1 and 2 in condition to no threat and threat
data$Condition[data$Condition == "1"] <- "No Threat"
data$Condition[data$Condition == "2"] <- "Threat"
data_long = data_long %>%
mutate(Condition = ifelse(Measurement=="No Threat", "No Threat",
ifelse(Measurement=="Threat", "Threat",)))
data_long = data_long %>%
mutate(Condition = ifelse(Measurement=="No Threat", "No Threat",
ifelse(Measurement=="Threat", "Threat", "NA")))
data_long = data_long %>%
mutate(Condition = ifelse(Value=="No Threat", "No Threat",
ifelse(Value=="Threat", "Threat", "NA")))
data_long <- data %>%
pivot_longer(cols=-c("ResponseId"),
names_to='Measurement',
values_to='Value')
data_long = data_long %>%
mutate(Condition = ifelse(Value=="No Threat", "No Threat",
ifelse(Value=="Threat", "Threat", "NA")))
data_long = data_long %>%
mutate(Condition = ifelse(Value=="No Threat", "No Threat",
ifelse(Value=="Threat", "Threat", NA)))
realistic_threat_long_d = data_long %>%
group_by(Condition) %>%
summarize(AvgThreat = mean(realisticThreatQ_1, na.rm=T))
realistic_threat_long_d = data_long %>%
group_by(Condition) %>%
summarize(AvgThreat = mean(realisticThreatQ_1, na.rm=T))
library(tidyr)
library(dplyr)
library(ggplot2)
# Import data
data <- read.csv("Realistic Threat and Asian Americans Pilot Data.csv", header=TRUE, na.strings=c(""," ","NA"))
# Remove unwanted columns and rows
data <- data[-c(1:2),] # delete rows 1 and 2
data <- data[, -c(1:8)] # delete columns 1 through 8
data <- data[, -c(2:9, 25:27)] # then, delete columns 2 through 9
data <- data[, -c(2)] # then, delete the new column 2
library(effectsize)
View(data)
View(data)
t.test(realisticThreatQ_1 ~ Condition, data=data)
# Convert from chr to int
data[4] <- lapply(data[4], as.numeric)
data <- read.csv("Realistic Threat and Asian Americans Pilot Data.csv", header=TRUE, na.strings=c(""," ","NA"))
# Remove unwanted columns and rows
data <- data[-c(1:2),] # delete rows 1 and 2
data <- data[, -c(1:8)] # delete columns 1 through 8
data <- data[, -c(2:9, 25:27)] # then, delete columns 2 through 9
data <- data[, -c(2)] # then, delete the new column 2
data[3] <- lapply(data[3], as.numeric)
colnames(data)
data[14:16] <- lapply(data[14:16], as.numeric)
t.test(realisticThreatQ_1 ~ Condition, data=data)
cohens_d(realisticThreatQ_1 ~ Condition, data=data)
data %>%
group_by(Condition) %>%
summarise(M = mean(realisticThreatQ_1), SD = sd(realisticThreatQ_1), count = n()) -> mean_threat
t.test(realisticThreatQ_1 ~ Condition, data=data)
cohens_d(realisticThreatQ_1 ~ Condition, data=data)
t.test(attitude_1 ~ Condition, data=data)
cohens_d(attitude_1 ~ Condition, data=data)
data %>%
group_by(Condition) %>%
summarise(M = mean(attitude_1), SD = sd(attitude_1), count = n()) -> mean_attitude
t.test(emotion ~ Condition, data=data)
cohens_d(emotion ~ Condition, data=data)
data %>%
group_by(Condition) %>%
summarise(M = mean(emotion), SD = sd(emotion), count = n()) -> mean_emotion
data$Condition[data$Condition == "1"] <- "No Threat"
data$Condition[data$Condition == "2"] <- "Threat"
ggplot(data = mean_attitude, aes(x = Condition, y = M, ymin = M-SD, ymax= M+SD)) +
geom_bar(stat = "identity", width = 0.5, fill="grey") +
geom_errorbar(width = 0.05) +
coord_cartesian(ylim = c(1,7)) +
ylab("Mean Attitude") +
xlab("Threat Condition") +
theme_minimal()
data %>%
group_by(Condition) %>%
summarise(M = mean(attitude_1), SD = sd(attitude_1), count = n()) -> mean_attitude
ggplot(data = mean_attitude, aes(x = Condition, y = M, ymin = M-SD, ymax= M+SD)) +
geom_bar(stat = "identity", width = 0.5, fill="grey") +
geom_errorbar(width = 0.05) +
coord_cartesian(ylim = c(1,7)) +
ylab("Mean Attitude") +
xlab("Threat Condition") +
theme_minimal()
ggplot(data = mean_attitude, aes(x = Condition, y = M, ymin = M-SD, ymax= M+SD)) +
geom_bar(stat = "identity", width = 0.5, fill="black") +
geom_errorbar(width = 0.05) +
coord_cartesian(ylim = c(1,7)) +
ylab("Mean Attitude") +
xlab("Threat Condition") +
theme_minimal()
ggplot(data = mean_emotion, aes(x = Condition, y = M, ymin = M-SD, ymax= M+SD)) +
geom_bar(stat = "identity", width = 0.5, fill="grey") +
geom_errorbar(width = 0.05) +
coord_cartesian(ylim = c(0,10)) +
ylab("Mean Affect") +
xlab("Threat Condition") +
theme_minimal()
t.test(realisticThreatQ_1 ~ Condition, data=data)
cohens_d(realisticThreatQ_1 ~ Condition, data=data)
View(data)
# Import data
data <- read.csv("Realistic Threat and Asian Americans Pilot Data.csv", header=TRUE, na.strings=c(""," ","NA"))
# Remove unwanted columns and rows
data <- data[-c(1:2),] # delete rows 1 and 2
data <- data[, -c(1:8)] # delete columns 1 through 8
data <- data[, -c(2:9, 25:27)] # then, delete columns 2 through 9
data <- data[, -c(2)] # then, delete the new column 2
View(mean_threat)
data$Condition[data$Condition == "1"] <- "No Threat"
data$Condition[data$Condition == "2"] <- "Threat"
data[3] <- lapply(data[3], as.numeric)
data[14:16] <- lapply(data[14:16], as.numeric)
# The original paper did ANOVA instead of t-tests, but honestly I'm kind of confused as to why they did since there are only two samples to compare. I'm also planning on coming to office hours to talk about this, maybe there's something I'm missing, but I struggled to run the ANOVAs because of this, so for this assignment, I ran two sample t-tests instead, if that's okay! I still wanted to have some type of result to show you guys.
# Two-sample t-test on perceived realistic threat
t.test(realisticThreatQ_1 ~ Condition, data=data)
t.test(attitude_1 ~ Condition, data=data)
data <- read.csv("Realistic Threat and Asian Americans Pilot Data.csv", header=TRUE, na.strings=c(""," ","NA"))
# Remove unwanted columns and rows
data <- data[-c(1:2),] # delete rows 1 and 2
data <- data[, -c(1:8)] # delete columns 1 through 8
data <- data[, -c(2:9, 25:27)] # then, delete columns 2 through 9
data <- data[, -c(2)] # then, delete the new column 2
# Sorry I know there's a much more efficient way to do this
data[3] <- lapply(data[3], as.numeric)
data[14:16] <- lapply(data[14:16], as.numeric)
data$Condition[data$Condition == "1"] <- "No Threat"
data$Condition[data$Condition == "2"] <- "Threat"
t.test(realisticThreatQ_1 ~ Condition, data=data)
cohens_d(realisticThreatQ_1 ~ Condition, data=data)
pwr.t.test(n= NULL, d = 0.5, sig.level = 0.05, power = 0.8, type = "two.sample", alternative = "two.sided")
library(effectsize)
library(pwr)
pwr.t.test(n= NULL, d = 0.5, sig.level = 0.05, power = 0.8, type = "two.sample", alternative = "two.sided")
pwr.t.test(n= NULL, d = 0.5, sig.level = 0.05, power = 0.8, type = "two.sample")
pwr.t.test(n= NULL, d = 0.5, sig.level = 0.05, power = 0.8, type = "two.sample")
ggplot(data = mean_emotion, aes(x = Condition, y = M, ymin = M-SD, ymax= M+SD)) +
geom_bar(stat = "identity", width = 0.5, fill="grey") +
geom_errorbar(width = 0.05) +
coord_cartesian(ylim = c(0,10)) +
ylab("Mean Affect") +
xlab("Threat Condition") +
theme_minimal()
ggplot(data = mean_attitude, aes(x = Condition, y = M, ymin = M-SD, ymax= M+SD)) +
geom_bar(stat = "identity", width = 0.5, fill="grey") +
geom_errorbar(width = 0.05) +
coord_cartesian(ylim = c(1,7)) +
ylab("Mean Attitude") +
xlab("Threat Condition") +
theme_minimal()
setwd("~/Desktop/maddux2008/writeup")
# Import data
data <- read.csv("Realistic Threat and Asian Americans Pilot B.csv", header=TRUE, na.strings=c(""," ","NA"))
View(data)
# Remove unwanted columns and rows
data <- data[-c(1:2),] # delete rows 1 and 2
data <- data[, -c(1:8)] # delete columns 1 through 8
data <- data[, -c(2:9, 25:27)] # then, delete columns 2 through 9
data <- data[, -c(2)] # then, delete the new column 2
# Import data
data <- read.csv("Realistic Threat and Asian Americans Pilot B.csv", header=TRUE, na.strings=c(""," ","NA"))
data <- data[-c(1:2),] # delete rows 1 and 2
data <- data[, -c(1:8)] # delete columns 1 through 8
colnames(data)
data <- data[, -c(2:9, 26:28)] # deleting session IDs and other unnecessary info (lat, lon, etc.) for analysis
View(data)
# Convert from chr to num
data[2:5] <- lapply(data[2:5], as.numeric)
data[14:16] <- lapply(data[14:16], as.numeric)
data <- read.csv("Realistic Threat and Asian Americans Pilot B.csv", header=TRUE, na.strings=c(""," ","NA"))
# Remove columns and rows not necessary for analysis
data <- data[-c(1:2),] # delete rows 1 and 2
data <- data[, -c(1:8)] # delete columns 1 through 8
data <- data[, -c(2:9, 26:28)] # deleting session IDs, lat, lon, etc.
colnames(data)
data[16:18] <- lapply(data[14:16], as.numeric)
# Rename 1 and 2 in condition to no threat and threat
data$Condition[data$Condition == "1"] <- "No Threat"
data$Condition[data$Condition == "2"] <- "Threat"
# Data exclusion
# Filter out people who did not answer 7 or more questions (half or more)
filtered_data = data %>%
filter(rowSums(is.na(data)) < 7)
library(tidyr)
library(dplyr)
library(ggplot2)
library(effectsize)
# Data exclusion
# Filter out people who did not answer 7 or more questions (half or more)
filtered_data = data %>%
filter(rowSums(is.na(data)) < 7)
View(filtered_data)
# Import data
data <- read.csv("Realistic Threat and Asian Americans Pilot B.csv", header=TRUE, na.strings=c(""," ","NA"))
# Remove columns and rows not necessary for analysis
data <- data[-c(1:2),] # delete rows 1 and 2
data <- data[, -c(1:8)] # delete columns 1 through 8
View(data)
data <- data[, -c(2:9, 26:28)] # deleting session IDs, lat, lon, etc.
# Convert from chr to num
data[2:5] <- lapply(data[2:5], as.numeric)
data[16:18] <- lapply(data[16:18], as.numeric)
data$Condition[data$Condition == "1"] <- "No Threat"
data$Condition[data$Condition == "2"] <- "Threat"
# Data exclusion
# Filter out people who did not answer 7 or more questions (half or more)
filtered_data = data %>%
filter(rowSums(is.na(data)) < 7)
library(lsr)
affect_anova <- aov(emotion ~ Condition, data = filtered_data)
summary(affect_anova)
# Two-sample t-test on attitude toward Asian Americans
t.test(attitude_1 ~ Condition, data=filtered_data)
# Two-sample t-test on attitude toward Asian Americans
t.test(attitude ~ Condition, data=filtered_data)
# Import data
data <- read.csv("Realistic Threat and Asian Americans Pilot B.csv", header=TRUE, na.strings=c(""," ","NA"))
data <- data[-c(1:2),] # delete rows 1 and 2
data <- data[, -c(1:8)] # delete columns 1 through 8
data <- data[, -c(2:9, 26:28)] # deleting session IDs, lat, lon, etc.
data[2:5] <- lapply(data[2:5], as.numeric)
data[16:18] <- lapply(data[16:18], as.numeric)
# Data exclusion
# Filter out people who did not answer 7 or more questions (half or more)
filtered_data = data %>%
filter(rowSums(is.na(data)) < 7)
# Two-sample t-test on attitude toward Asian Americans
t.test(attitude ~ Condition, data=filtered_data)
View(filtered_data)
cohens_d(emotion ~ Condition, data=filtered_data)
affect_anova <- aov(emotion ~ Condition, data = filtered_data)
summary(affect_anova)
etaSquared(affect_anova)
# Bar graph for affect/emotion
filtered_data %>%
group_by(Condition) %>%
summarise(M = mean(emotion), SD = sd(emotion), count = n()) -> mean_emotion
# Bar graph for affect/emotion
filtered_data %>%
group_by(Condition) %>%
filter(!is.na) %>%
summarise(M = mean(emotion), SD = sd(emotion), count = n()) -> mean_emotion
# Bar graph for affect/emotion
filtered_data %>%
group_by(Condition) %>%
filter(!is.na(Condition)) %>%
summarise(M = mean(emotion), SD = sd(emotion), count = n()) -> mean_emotion
etaSquared(affect_anova)
attitude_anova <- aov(attitude ~ Condition, data = filtered_data)
summary(attitude_anova)
etaSquared(attitude_anova)
filtered_data %>%
group_by(Condition) %>%
filter(!is.na(Condition)) %>%
summarise(M = mean(attitude),
SD = sd(attitude),
count = n(),
ci_attitude = 1.96 * sd(attitude) / sqrt(count)) -> mean_attitude
summarise(M = mean(emotion),
SD = sd(emotion),
count = n(),
ci_affect = 1.96 * sd(affect) / sqrt(count)) -> mean_affect
filtered_data %>%
group_by(Condition) %>%
filter(!is.na(Condition)) %>%
summarise(M = mean(attitude),
SD = sd(attitude),
count = n(),
ci_attitude = 1.96 * sd(attitude) / sqrt(count)) -> mean_attitude %>%
summarise(M = mean(emotion),
SD = sd(emotion),
count = n(),
ci_affect = 1.96 * sd(affect) / sqrt(count)) -> mean_affect
filtered_data %>%
group_by(Condition) %>%
filter(!is.na(Condition)) %>%
summarise(M = mean(emotion),
SD = sd(emotion),
count = n(),
ci_affect = 1.96 * sd(affect) / sqrt(count)) -> mean_affect
filtered_data %>%
group_by(Condition) %>%
filter(!is.na(Condition)) %>%
summarise(M = mean(emotion),
SD = sd(emotion),
count = n(),
ci_affect = 1.96 * sd(emotion) / sqrt(count)) -> mean_affect
filtered_data %>%
group_by(Condition) %>%
filter(!is.na(Condition)) %>%
summarise(M = mean(emotion),
SD = sd(emotion),
count = n(),
ci_affect = 1.96 * sd(emotion) / sqrt(count)) -> mean_affect
filtered_data %>%
group_by(Condition) %>%
filter(!is.na(Condition)) %>%
summarise(M = mean(attitude),
SD = sd(attitude),
count = n(),
ci_attitude = 1.96 * sd(attitude) / sqrt(count)) -> mean_attitude
ggplot(data = mean_attitude, aes(x = Condition, y = M, ymin = M-SD, ymax= M+SD)) +
geom_bar(stat = "identity", width = 0.5, fill="grey") +
geom_errorbar(width = 0.05) +
coord_cartesian(ylim = c(1,7)) +
ylab("Mean Attitude") +
xlab("Threat Condition") +
theme_classic()
ggplot(data = mean_attitude, aes(x = Condition, y = M, ymin = M-ci_attitude, ymax= M+ci_attitude)) +
geom_bar(stat = "identity", width = 0.5, fill="grey") +
geom_errorbar(width = 0.05) +
coord_cartesian(ylim = c(1,7)) +
ylab("Mean Attitude") +
xlab("Threat Condition") +
theme_classic()
ggplot(data = mean_attitude, aes(x=Condition, y=M, ymin=M-ci_attitude, ymax= M+ci_attitude)) +
geom_bar(stat = "identity", width = 0.7, fill="grey") +
geom_errorbar(width = 0.05) +
coord_cartesian(ylim = c(1,7)) +
ylab("Mean Attitude") +
xlab("Threat Condition") +
theme_classic()
ggplot(data = mean_attitude, aes(x=Condition, y=M, ymin=M-ci_attitude, ymax= M+ci_attitude)) +
geom_bar(stat = "identity", width = 1, fill="grey") +
geom_errorbar(width = 0.05) +
coord_cartesian(ylim = c(1,7)) +
ylab("Mean Attitude") +
xlab("Threat Condition") +
theme_classic()
ggplot(data = mean_attitude, aes(x=Condition, y=M, ymin=M-ci_attitude, ymax= M+ci_attitude)) +
geom_bar(stat = "identity", width = 0.3, fill="grey") +
geom_errorbar(width = 0.05) +
coord_cartesian(ylim = c(1,7)) +
ylab("Mean Attitude") +
xlab("Threat Condition") +
theme_classic()
data <- read.csv("Realistic Threat and Asian Americans Pilot B.csv", header=TRUE, na.strings=c(""," ","NA"))
# Remove columns and rows not necessary for analysis
data <- data[-c(1:2),] # delete rows 1 and 2
data <- data[, -c(1:8)] # delete columns 1 through 8
data <- data[, -c(2:9, 26:28)] # deleting session IDs, lat, lon, etc.
# Convert from chr to num
data[2:5] <- lapply(data[2:5], as.numeric)
data[16:18] <- lapply(data[16:18], as.numeric)
# Rename values of 1 and 2 in condition to no threat and threat, respectively
data$Condition[data$Condition == "1"] <- "No Threat"
data$Condition[data$Condition == "2"] <- "Threat"
# Data exclusion
# Filter out people who did not answer 7 or more questions (half or more)
filtered_data = data %>%
filter(rowSums(is.na(data)) < 7)
attitude_anova <- aov(attitude ~ Condition, data = filtered_data)
summary(attitude_anova)
etaSquared(attitude_anova)
# One way ANOVA on affect/emotion toward Asian Americans
affect_anova <- aov(emotion ~ Condition, data = filtered_data)
summary(affect_anova)
etaSquared(affect_anova)
filtered_data %>%
group_by(Condition) %>%
filter(!is.na(Condition)) %>%
summarise(M = mean(attitude),
SD = sd(attitude),
count = n(),
ci_attitude = 1.96 * sd(attitude) / sqrt(count)) -> mean_attitude
filtered_data %>%
group_by(Condition) %>%
filter(!is.na(Condition)) %>%
summarise(M = mean(emotion),
SD = sd(emotion),
count = n(),
ci_affect = 1.96 * sd(emotion) / sqrt(count)) -> mean_affect
ggplot(data = mean_attitude, aes(x=Condition, y=M, ymin=M-ci_attitude, ymax= M+ci_attitude)) +
geom_bar(stat = "identity", width = 0.3, fill="grey") +
geom_errorbar(width = 0.05) +
coord_cartesian(ylim = c(1,7)) +
ylab("Mean Attitude") +
xlab("Threat Condition") +
theme_classic()
ggplot(data = mean_attitude, aes(x=Condition, y=M, ymin=M-ci_attitude, ymax= M+ci_attitude)) +
geom_bar(stat = "identity", width = 0.3, fill="darkgrey") +
geom_errorbar(width = 0.05) +
coord_cartesian(ylim = c(1,7)) +
ylab("Mean Attitude") +
xlab("Threat Condition") +
theme_classic()
ggplot(data = mean_affect, aes(x=Condition, y=M, ymin=M-ci_affect, ymax= M+ci_affect)) +
geom_bar(stat = "identity", width = 0.3, fill="darkgrey") +
geom_errorbar(width = 0.05) +
coord_cartesian(ylim = c(0,100)) +
ylab("Mean Affect") +
xlab("Threat Condition") +
theme_classic()
# Bar graph for attitude
ggplot(data = mean_attitude, aes(x=Condition, y=M, ymin=M-ci_attitude, ymax= M+ci_attitude)) +
geom_bar(stat = "identity", width = 0.3, fill="darkgrey") +
geom_errorbar(width = 0.05) +
coord_cartesian(ylim = c(1,7)) +
ylab("Mean Attitude") +
xlab("Condition") +
theme_classic()
# Load Relevant Libraries and Functions
library(tidyr)
library(dplyr)
library(ggplot2)
library(effectsize)
library(lsr)
# Import data
data <- read.csv("Realistic Threat and Asian Americans Pilot B.csv", header=TRUE, na.strings=c(""," ","NA"))
# Remove columns and rows not necessary for analysis
data <- data[-c(1:2),] # delete rows 1 and 2
data <- data[, -c(1:8)] # delete columns 1 through 8
data <- data[, -c(2:9, 26:28)] # deleting session IDs, lat, lon, etc.
# Convert from chr to num
data[2:5] <- lapply(data[2:5], as.numeric)
data[16:18] <- lapply(data[16:18], as.numeric)
# Rename values of 1 and 2 in condition to no threat and threat, respectively
data$Condition[data$Condition == "1"] <- "No Threat"
data$Condition[data$Condition == "2"] <- "Threat"
# Data exclusion
# Filter out participants who did not answer 7 or more questions (half or more)
filtered_data = data %>%
filter(rowSums(is.na(data)) < 7) %>%
filter(!is.na(Condition))
# Filter out participants who failed the attention check - I need help with this because I keep getting an error
# ifelse(filtered_data$Condition == "No Threat"){
# filter(filtered_data$attnCheckYoshi = 2)
#} else {
# filter(filtered_data$attnCheckJamal = 2)
#}
View(filtered_data)
# One way ANOVA on attitude toward Asian Americans
attitude_anova <- aov(attitude ~ Condition, data = filtered_data)
summary(attitude_anova)
etaSquared(attitude_anova)
# One way ANOVA on affect/emotion toward Asian Americans
affect_anova <- aov(emotion ~ Condition, data = filtered_data)
summary(affect_anova)
etaSquared(affect_anova)
# Prep for data visualization
filtered_data %>%
group_by(Condition) %>%
filter(!is.na(Condition)) %>%
summarise(M = mean(attitude),
SD = sd(attitude),
count = n(),
ci_attitude = 1.96 * sd(attitude) / sqrt(count)) -> mean_attitude
filtered_data %>%
group_by(Condition) %>%
filter(!is.na(Condition)) %>%
summarise(M = mean(emotion),
SD = sd(emotion),
count = n(),
ci_affect = 1.96 * sd(emotion) / sqrt(count)) -> mean_affect
# Bar graph for attitude
ggplot(data = mean_attitude, aes(x=Condition, y=M, ymin=M-ci_attitude, ymax= M+ci_attitude)) +
geom_bar(stat = "identity", width = 0.3, fill="darkgrey") +
geom_errorbar(width = 0.05) +
coord_cartesian(ylim = c(1,7)) +
ylab("Mean Attitude") +
xlab("Condition") +
theme_classic()
# Bar graph for affect
ggplot(data = mean_affect, aes(x=Condition, y=M, ymin=M-ci_affect, ymax= M+ci_affect)) +
geom_bar(stat = "identity", width = 0.3, fill="darkgrey") +
geom_errorbar(width = 0.05) +
coord_cartesian(ylim = c(0,100)) +
ylab("Mean Affect") +
xlab("Condition") +
theme_classic()
# The original graphs did not have error bars, but I wanted to add them in mine
ifelse(filtered_data$Condition == "No Threat"){
# Data exclusion
# Filter out participants who did not answer 7 or more questions (half or more)
filtered_data = data %>%
filter(rowSums(is.na(data)) < 7) %>%
filter(!is.na(Condition)) %>%
filter((Condition == "No Threat" & attnCheckYoshi == 2) | (Condition != "No Threat" & attnCheckJamal == 2))
